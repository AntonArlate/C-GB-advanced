Задание 1. Выбор направления
Написать функцию, которая будет проверять корректность выбранного направления. Змейка не может наступать на хвост, поэтому необходимо запретить

Ответ: задание выполнено при помощи функции
200 int newDirectIsValid (Direction current_direct, Direction new_direct)

-----

Задание 2. Управление WASD
Добавить возможность управления змейкой клавишами WSAD (вне зависимости от раскладки и регистра).

Ответ: Изначально я сделал на WASD так как мне привычней. А стрелки не использовал.
Однако сами направления у меня передаются при помощи enum значений. А переводом нажатий занимается функция
177 Direction conversionKeyToDirect(char key_detect)
Через которую можно реализовать любое управление.
За регистром следит функция считывания нажатий
167 void *keyboardThread(void *buffer_link)

-----

Дополнительные заметки:
    1. Я полностью переделал программу образец из семинара. По этому пока утерян функционал границ поля.
    2. Программа после инициализации выполняется заданное количество циклов. Это пока для страховки зацикливания.
    3. Программа разделена на 2 потока. Один запускает функцию
167 void *keyboardThread(void *buffer_link)
В которую передаётся указатель на переменную. Функция пытается в скрытом режими считывать нажатия и записывать в переменную.
Второй поток разделён на общий рендер и цикл отрисовки змеки.
    4. Сейчас змейка рисуется раз в несколько циклов всей программы, что вызывает разницу в паузах. 
Возможно потом я сделаю черезе time() с отслежованием процессорного времени, а не тактового.