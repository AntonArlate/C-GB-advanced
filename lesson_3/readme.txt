Задание 1. Счетчик уровня

Добавить счётчик уровня (1 съеденная еда – 1 уровень).
void printLevel(struct snake \*head)

При завершении игры выводится финальный результат
void printExit(struct snake \*head)

Ответ: отображение счётчика не добавлено, так как пока не определился с выводом на экран.
Прошлая версия вывода была изменена и теперь вроде как не плохо работает при запуске .exe в windows
Результат считается скрыто и при выходе по кнопке Q выводится.

-----

Задание 2. Увеличение скорости

Написать функцию, которая при достижении нового уровня увеличивает скорость змейки.
DELAY определяет скорость работы программы (отрисовки).

Ответ: Немного по другой формуле, но реализовано на (стр 385)

-----

Задание 3. Пауза
Написать функцию, с помощью которой можно будет поставить игру на паузу при нажатии клавиши ‘P’. Добавить пояснительную надпись на главный экран.
Ответ: Выполнено.

-----

Дополнительные заметки:
    1. Изменил способ вывода на экран. 
        Вместо использования позиционирования курсора ANSI которое не работает при запуске исполняемого файла в windows.
        Использована функция SetConsoleCursorPosition() библиотеки <windows.h>
    2. Вместо дополнительного потока для считывания нажатий, использована функция kbhit()
    3. Реализована отрисовка границ игрового поля. Однако коллизии и функционал проигрыша пока отсутствует.
    4. Рендер игры теперь реализван на метках процессорного времени, а не на задержках. 
        Данный приём мне знаком из опыта общения с микроконтроллерами, в которых оснойной цикл работы очень плохо переносит задержки.
        А до многопоточности я в те времена ещё не дошёл.
    5. Были какие-то аномалии при компиляции. При первом нажатии клавиши игра зависала. 
        В чём проблема так и не выявил. Возникала переодически и при некотором изменении кода (просто добавив printf даже если) пропадала.
    6. Исправлен не большой баг в прошлом задании. Функция conversionKeyToDirect() вызывалась при любом нажатии.
        Но при отсутствующем значении выдавала 0, что было эквивалентно UP.
        Теперь функция может вернуть -1, что можно обработать как ошибку.
